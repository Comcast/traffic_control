<!--
     Copyright 2015 Comcast Cable Communications Management, LLC

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
 -->
<!DOCTYPE HTML>
% title 'Upload Server CSV';
<html lang="en">
<head>
<style>
  body { color: #000000; }
  td { border: 1px solid #c1c1c1; }
  .uploader { background-color:#fefefe;width:900px;border:1px solid green;border-radius:0px;padding:10px; }
  .upload_form_title1 { color:#000000;font-size:14px;font-weight:900; }
  .upload_form_title2 { color:#000000;font-size:10px;font-weight:900; }
  .upload_form_container { padding-top:5px; }
  .form_file { border:1px solid #7e7e7e;border-radius:0px;background-color:#7e7e7e;padding:5px; }
  .input_file { color:#000000;border:1px solid #c1c1c1;border-radius:0px;padding:5px;background-color:#efefef; }
  #btnSubmit { }
  #divGreenMessages { padding: 5px;font-size:8px;font-weight:900;display:none; }
  #spanGreenMessages { color:green; }
  #divRedMessages { padding:5px;font-size:8px;font-weight:900;display:none; }
  #spanRedMessages { color:red; }
  #divInstructionsSection {}
  #divInstructions { display:none; }
  .instructionDetails { color:#777777; }
</style>
<script type="text/javascript" src="/js/prettyprint.js"></script>
<script type="text/javascript">
$(document).ready(function() {
  function disableDefaultSelectors() {
    $('#btnSubmit').attr('disabled','true');
    $('#input_file').val('');
  };
  function validateTextFile() {
    $('#input_file').change(function(evt) {
      $('#divRedMessages').hide();
      $('#divGreenMessages').hide();
      //Retrieve the first (and only!) File from the FileList object
      var f = evt.target.files[0]; 
      //if (f.size < 5242880) {  // 5MByte file size limit
      if (f.size < 1073741824) {  // 1GByte file size limit
        var r = new FileReader();
        r.onload = function(e) { 
          var contents = e.target.result;
          console.log('f.type = ' + f.type);
          if (f.type.indexOf('text') === -1) {
            $('#divRedMessages').show();
            $('#spanRedMessages').text('[' + f.name + ']:  NOT A STANDARD TEXT OR CSV FILE...');
            disableDefaultSelectors();
          } else {
            $('#divGreenMessages').show();
            $('#spanGreenMessages').text('[' + f.name + ']:  VALID TEXT/CSV FILE...');
            $('#btnSubmit').removeAttr('disabled');
          } 
        }
        r.readAsText(f);
      } else { 
        $('#divRedMessages').show();
        $('#spanRedMessages').text('[' + f.name + '] [' + f.size + ']:  FILE SIZE MUST BE < 1GByte');
        disableDefaultSelectors();
      }
    });
  };
  disableDefaultSelectors();
  validateTextFile();
  $('#btnSubmit').click(function(e) {
    $('#divGreenMessages').hide();
    $('#divRedMessages').hide();
    var data = new FormData();
    jQuery.each($('#input_file')[0].files, function(i, file) {
      data.append('file-' + i, file);
    });
    if ($('#input_file').val().indexOf('.csv') === -1) {
      $('#spanRedMessages').text('ERROR:  FILE MUST BE A CSV FILE!');
      $('#divRedMessages').show();
    } else {
      $.ajax({
        url: '/uploadhandlercsv',
        data: data,
        cache: false,
        contentType: false,
        processData: false,
        type: 'POST',
        success: function(data) {
          var jsonData = JSON && JSON.parse(data) && $.parseJSON(data);  // convert data string to JSON js object
          var processCSVErrors = jsonData.processcsverrors;
          if (jsonData.processcsverrors.length === 0) {
            errors = 'NONE';
          } else {
            errors = 'YES';
          }
          $('#spanRedMessages').text('');
          $('#spanGreenMessages').text('SUCCESS: [serverpath=' + jsonData.serverpath + '] [filename=' + jsonData.filename + '] [size=' + jsonData.size + '] [process_csv_errors=' + errors +']');
          $('#divGreenMessages').show();
          if (errors === 'YES') {
            if (processCSVErrors.indexOf('EXCEPTION_ERROR') === -1) {
              var validationMessages = '<div style="color:red;border: 1px solid #919191;padding-top:5px;padding-left:5px;">VALIDATION ERRORS[PROCESSING WILL NOT PROCEED UNTIL THIS IS RESUBMITTED AND RESOLVED]:  <ul style="color:#919191;">';
              processCSVErrors = processCSVErrors.replace(/__NEWLINE__/g,',');
              validationMessages = validationMessages + '<li style="display:none;">' + processCSVErrors + '</li>';
              validationMessages = validationMessages + '</ul></div>';
              $('#spanRedMessages').html(validationMessages);
            } else {
              var exceptionMessages = '<div style="color:red;border: 1px solid #919191;padding-top:5px;padding-left:5px;">EXCEPTION ERRORS[PROCESSING WILL NOT PROCEED UNTIL THIS IS RESUBMITTED AND RESOLVED]:  <ul style="color:#919191;">';
              processCSVErrors = processCSVErrors.replace(/__NEWLINE__/g,',');
              exceptionMessages = exceptionMessages + '<li style="display:block;">' + processCSVErrors + '</li>';
              exceptionMessages = exceptionMessages + '</ul></div>';
              $('#spanRedMessages').html(exceptionMessages);
            }
            $('#divRedMessages').show();
          } else {
            $('#divRedMessages').hide();
          }
        },
        error: function(jqXHR,textStatus,errorThrown) {
        }
      })
      .done(function(data,textStatus,jqXHR) {
      })
      .fail(function(a,b,c) {
        var ppA = prettyPrint(a,{maxDepth:4});
        var ppB = prettyPrint(b,{maxDepth:4});
        var ppC = prettyPrint(c,{maxDepth:4});
        if (b==='error' || b.length > 0) {
          alert('[' + a + '] [' + b + '] [' + c + ']:  SERVER ERROR...');
        }
        $('#spanRedMessages').text('SERVER/UPLOAD ERROR:  PLEASE VERIFY YOUR FILE IS A CSV FILE AND HAS SIZE < 5242880 bytes');
        $('#spanGreenMessages').text('');
        $('#divGreenMessages').hide();
        $('#divRedMessages').show();
      })
      .always(function(dataOrjqXHR,textStatus,jqXHROrErrorThrown) {
      });
    } // end if/else
    e.preventDefault();
  });
  $("#tabs").tabs();
  //$("#tabs").tabs('select',2);  // start-up with the 'Flot Advanced View' tab on page load
  //$("#tabs, #tabs-1").tabs({
    //select: function(event, ui) {
      //var tabNumber = ui.index;
      //var tabName = $(ui.tab).text();
      // do something here...related to tabs
    //}
  //});
  $("#divSampleCSVContentDialog").dialog({autoOpen:false,height:150,width:900,modal:true});
  $("#btnViewSampleCSVContent").click(function() {
    $("#divSampleCSVContentDialog").dialog('open');
  });
  $("#btnAvailableLocationsFormatted").click(function() {
    var url = '/datalocationtrimmed';
    var json = '';
    var winOpen = window.open('','Available Locations(Formatted)');
    $.getJSON(url,{},function (data) {
      json = JSON.stringify(data,null,2);
      //console.log('JSON STRING = ' + json);
      winOpen.document.write('<html><head><title>Available Locations(Formatted)</title><style>body { white-space: pre; font-family: monospace; }</style></head><body>');
      winOpen.document.write(json);
      winOpen.document.write('</body></html>');
    })
    .done(function() {})
    .fail(function(a,b,c) { console.log('ERROR: (' + cdnUrl + ') [a=' + a + '] [b=' + b + '] [c=' + c + ']'); })
    .always(function() {});
  });
  $("#btnAvailableTypesFormatted").click(function() {
    var url = '/datatypetrimmed';
    var json = '';
    var winOpen = window.open('','Available Types(Formatted)');
    $.getJSON(url,{},function (data) {
      json = JSON.stringify(data,null,2);
      //console.log('JSON STRING = ' + json);
      winOpen.document.write('<html><head><title>Available Types(Formatted)</title><style>body { white-space: pre; font-family: monospace; }</style></head><body>');
      winOpen.document.write(json);
      winOpen.document.write('</body></html>');
    })
    .done(function() {})
    .fail(function(a,b,c) { console.log('ERROR: (' + cdnUrl + ') [a=' + a + '] [b=' + b + '] [c=' + c + ']'); })
    .always(function() {});
  });
  $("#btnAvailableProfilesFormatted").click(function() {
    var url = '/dataprofiletrimmed';
    var json = '';
    var winOpen = window.open('','Available Profiles(Formatted)');
    $.getJSON(url,{},function (data) {
      json = JSON.stringify(data,null,2);
      //console.log('JSON STRING = ' + json);
      winOpen.document.write('<html><head><title>Available Profiles(Formatted)</title><style>body { white-space: pre; font-family: monospace; }</style></head><body>');
      winOpen.document.write(json);
      winOpen.document.write('</body></html>');
    })
    .done(function() {})
    .fail(function(a,b,c) { console.log('ERROR: (' + cdnUrl + ') [a=' + a + '] [b=' + b + '] [c=' + c + ']'); })
    .always(function() {});
  });
  $("#btnAvailablePhysLocationsFormatted").click(function() {
    var url = '/dataphys_locationtrimmed';
    var json = '';
    var winOpen = window.open('','Available Physical Locations(Formatted)');
    $.getJSON(url,{},function (data) {
      json = JSON.stringify(data,null,2);
      //console.log('JSON STRING = ' + json);
      winOpen.document.write('<html><head><title>Available Physical Locations(Formatted)</title><style>body { white-space: pre; font-family: monospace; }</style></head><body>');
      winOpen.document.write(json);
      winOpen.document.write('</body></html>');
    })
    .done(function() {})
    .fail(function(a,b,c) { console.log('ERROR: (' + cdnUrl + ') [a=' + a + '] [b=' + b + '] [c=' + c + ']'); })
    .always(function() {});
  });
  $('#btnToggleInstructions').click(function() {
    $('#divInstructions').toggle();
  });
%= include 'jmenu'
});
</script>
</head>
<body>
%= include 'navbar'
<div class="container">
  <div id="tabs">
    <ul>
      <li><a href="#tabs-1">Upload Server CSV</a></li>
      <li><a href="#tabs-2">WIKI</a></li>
      <li><a href="#tabs-3">DEV NOTES</a></li>
    </ul>
    <div id="tabs-1">
      <div class="uploader">
        <div class="upload_form_title1">Upload Server CSV</div>
        <div class="upload_form_title2">[Pure JQuery/AJAX using FormData object]</div>
        <div class="upload_form_container">
          <div style="display:none;"><button class="button" id="btnViewSampleCSVContent">VIEW SAMPLE CSV CONTENT</button></div>
          <div id="divSampleCSVContentDialog" title="SAMPLE CSV CONTENT">
            <div><pre>HEADER: [HOSTNAME,DOMAINNAME,INTERFACENAME,NETWORKIP,NETWORKSUBNET,NETWORKGATEWAY,IPV6ADDRESS,IPV6GATEWAY,NETWORKMTU,LOCATION,TYPE,PROFILE,TCPPORT,1GMANAGEMENTIPADDRESS,1GMANAGEMENTNETMASK,1GMANAGEMENTGATEWAY,ILOIPADDRESS,ILONETMASK,ILOGATEWAY,ILOUSERNAME,ILOPASSWORD,ROUTERHOSTNAME,ROUTERPORTNAME]</pre></div>
            <div><pre>test_hostname,test_domainname,test_interfacename,192.168.2.2,255.255.255.0,192.168.2.1,2001:558:1418:1f:5920:1e18:a39a:29aa,2001:558:1418:1f:5920:1e18:a39a:29ab,9000,us-co-denver-test,CCR,CCR_TOP_TEST,8080,192.168.2.3,255.255.255.0,192.168.2.1,192.168.2.4,255.255.255.0,192.168.2.1,test_username,test_password,router_host_test,8080</pre></div>
            <div><pre>test_hostname2,test_domainname2,test_interfacename2,192.168.2.2,255.255.255.0,192.168.2.1,2001:558:1418:1f:5920:1e18:a39a:29aa,2001:558:1418:1f:5920:1e18:a39a:29ab,9000,us-co-denver-test2,CCR,CCR_TOP_TEST2,8080,192.168.2.3,255.255.255.0,192.168.2.1,192.168.2.4,255.255.255.0,192.168.2.1,test_username2,test_password2,router_host_test2,8080</pre></div>
          </div>
          <form class="form_file" action="" method="POST" enctype="multipart/form-data">
            <input id="input_file" class="input_file" type="file" name="files[]" accept=".csv" />
            <button class="button" id="btnSubmit">Submit</button>
          </form>
        </div>
        <div id="divGreenMessages"><span id="spanGreenMessages"></span></div>
        <div id="divRedMessages"><span id="spanRedMessages"></span></div>
      </div>
      <div id="divInstructionsSection" style="width:900px;">
        <div>
          <button class="button" id="btnToggleInstructions">Toggle Instructions</button>
        </div>
        <div id="divInstructions">
          <div>Below is the general process for the ‘UploadServerCSV’ Traffic Ops production page:</div>
          <div>
            <ul>
              <li>
                Firstly, please review the WIKI tab on this same page.
                <ul class="instructionDetails">
                  <li>Note the sample 'good.csv' file that you can use as a baseline to build your own csv file to upload.</li>
                  <li>Then there are 4 buttons that show formatted data for available [location,type,profile,phys_location] using the 'name' property that can be used as a reference for your csv file.</li>
                </ul>
              </li>
              <li>
                Prepare your CSV file using the attached ‘good.csv’ file as a baseline.
                <ul class="instructionDetails">
                  <li>The challenging part is constructing your CSV file.  Some people have used Excel and some have simply used text editors like Vi.</li>
                  <li>Be aware of the RED sections in the WIKI for REQUIRED FIELDS.</li>
                  <li>As you can see in the attached ‘good.csv’ file, there is an optional 'HEADER:’ line that shows the field names as reference and is safely ignored in the processing.</li>
                </ul>
              </li>
              <li>
                Once you have your own CSV file simply go back to the ‘Upload Server CSV’ tab and select it by clicking on ‘Choose File’ and then selecting your file and ‘Open’ it.
                <ul class="instructionDetails">
                  <li>File validations will then validate that your CSV file is a TEXT/CSV file before any upload occurs.</li>
                  <li>
                    If you see a GREEN message and the ‘Submit’ button is active, then you can click it to send it to the server for server side validation.
                    <ul>
                      <li style="color:red;">At the time of this writing, there may be a bug under windows chrome/firefox that always shows an red error message.  This is under investigation.  Tested under Mac OS X.</li>
                    </ul>
                  </li>
                  <li>If you see any further server validation messages, then you will have to make changes to your CSV and re-upload it before it can be further processed.</li>
                  <li>If you are successful, then you can proceed to the 'MAIN MENU->Servers' page and perform a search lookup of your newly entered servers.</li>
                  <li>
                    You can then select any newly entered server to make further edits and saves.
                    <ul style="color:#4e80e7;">
                      <li>Enter a server name in the top search edit field to filter by servers.  Then click on the hostname to edit/save/delete/etc.</li>
                    </ul>
                  </li>
                </ul>
              </li>
            </ul>
          </div>    
        </div>
      </div>
    </div>
    <div id="tabs-2">
      <div>WIKI DOCUMENTATION</div>
      <ul>
        <li>Sample CSV file:  <a href="/good.csv">good.csv</a></li>
        <li><button class="button" id="btnAvailableLocationsFormatted">AVAILABLE LOCATIONS(FORMATTED)</button></li>
        <li><button class="button" id="btnAvailableProfilesFormatted">AVAILABLE PROFILES(FORMATTED)</button></li>
        <li><button class="button" id="btnAvailableTypesFormatted">AVAILABLE TYPES(FORMATTED)</button></li>
        <li><button class="button" id="btnAvailablePhysLocationsFormatted">AVAILABLE PHYSICAL LOCATIONS(FORMATTED)</button></li>
        <li>This is a pure javascript/jquery/ajax client implementation of a file uploader using the browser FormData object.</li>
        <ul>
          <li>Some older browsers may not have this new feature.</li>
        </ul>
        <li>The server upload handling is provided by a mojolicious server component.</li>
        <li>File Type and File Size validation are performed when the file is selected.</li>
        <li>Both client and server code limit CSV file sizes to 1GByte now.</li>
        <li>The 'SUBMIT' button will only be enabled if the File Type & File Size validation is valid.</li>
        <li>Once all client and server validations pass the data will be inserted using Mojolicious APIs similar to 'Add Server' process.</li>
        <li>The first optional line in the file may be started with 'HEADER: ...' and it will be safely ignored.</li>
        <li>CSV files created using EXCEL will include 'ctrl-M' carriage return characters in them.  This is now handled properly.</li>
        <li>REQUIRED CSV FORMAT[25 items/line]:</li>
          <ul>
            <li>HOSTNAME <span style="color:red;">[REQUIRED]</span></li>
            <li>DOMAINNAME <span style="color:red;">[REQUIRED]</span></li>
            <li>INTERFACENAME <span style="color:red;">[REQUIRED]</span></li>
            <li>NETWORKIP <span style="color:red;">[REQUIRED][UNIQUE PER PROFILE]</span></li>
            <li>NETWORKSUBNET <span style="color:red;">[REQUIRED]</span></li>
            <li>NETWORKGATEWAY <span style="color:red;">[REQUIRED]</span></li>
            <li>IPV6ADDRESS <span style="color:red;">[UNIQUE PER PROFILE]</span></li>
            <li>IPV6GATEWAY</li>
            <li>NETWORKMTU <span style="color:red;">[REQUIRED]</span></li>
            <li>LOCATION <span style="color:red;">[REQUIRED] [MUST BE TEXT. CASE SENSITIVE.]</span></li>
            <li>PHYS_LOCATION <span style="color:red;">[REQUIRED] [MUST BE TEXT. CASE SENSITIVE.]</span></li>
            <li>RACK <span style="color:red;">[REQUIRED]</span></li>
            <li>TYPE <span style="color:red;">[REQUIRED] [MUST BE TEXT. CASE SENSITIVE.]</span></li>
            <li>PROFILE <span style="color:red;">[REQUIRED] [MUST BE TEXT. CASE SENSITIVE.]</span></li>
            <li>TCPPORT <span style="color:red;">[REQUIRED]</span></li>
            <li>1GMANAGEMENTIPADDRESS</li>
            <li>1GMANAGEMENTNETMASK</li>
            <li>1GMANAGEMENTGATEWAY</li>
            <li>ILOIPADDRESS</li>
            <li>ILONETMASK</li>
            <li>ILOGATEWAY</li>
            <li>ILOUSERNAME</li>
            <li>ILOPASSWORD</li>
            <li>ROUTERHOSTNAME</li>
            <li>ROUTERPORTNAME <span style="color:red;">[REQUIRED]</span></li>
          </ul>
        </li>
      </ul>
    </div>
    <div id="tabs-3">
      <div>DEVELOPMENT NOTES</div>
      <ul>
        <li>UI upload form makes use of pure javascript/jquery/ajax solution using the browser FormData object.</li>
        <li>Mojolicious server component uses the Mojo::Upload object.</li>
        <li>All client and server validation must pass before any CSV record is allowed to be created.</li>
        <li>No updates are performed yet, only creates/inserts.</li>
        <li>Exception errors are passed back to the front end through JSON parsing routines.</li>
        <li>Exception error strings are filtered to prevent JSON parsing from failing.</li>
      </ul>
    </div>
  </div>
</body> 
</html>
